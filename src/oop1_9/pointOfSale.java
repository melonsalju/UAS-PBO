/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop1_9;

import DBConnection.DBConnect;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class pointOfSale extends javax.swing.JFrame {
    private PreparedStatement pst;
    private final Object[] columns = {"Barcode", "Kode SKU", "Nama Item", "Harga", "Stok"};
    DefaultTableModel model = new DefaultTableModel(null, this.columns);
    
    /**
     * Creates new form pointOfSale
     */
    public pointOfSale() {
        initComponents();
        String searchQuery = null;
        loadDataToTable(searchQuery);
    }
    
    private void loadDataToTable(String searchQuery) {
        String sql = "SELECT * FROM products";
        if (searchQuery != null && !searchQuery.isEmpty()) {
            sql += " WHERE barcode LIKE '%" + searchQuery + "%' OR " +
                   "sku LIKE '%" + searchQuery + "%' OR " +
                   "name LIKE '%" + searchQuery + "%'";
        }

        try (Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "")) {
            this.jTable1.setModel(model);
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            Statement s = c.createStatement();
            ResultSet rs = s.executeQuery(sql);

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("barcode"),
                    rs.getString("sku"),
                    rs.getString("name"),
                    rs.getInt("harga_jual"),
                    rs.getInt("stok")
                });
            }

            rs.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        navigateToKasir = new javax.swing.JButton();
        navigateToAddProduct = new javax.swing.JButton();
        navigateToCalculator = new javax.swing.JButton();
        navigateToLaporan = new javax.swing.JButton();
        openEditForm = new javax.swing.JButton();
        deleteProductButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        navigateToKasir.setText("Kasir");
        navigateToKasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigateToKasirActionPerformed(evt);
            }
        });

        navigateToAddProduct.setText("Tambah Produk");
        navigateToAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigateToAddProductActionPerformed(evt);
            }
        });

        navigateToCalculator.setText("Kalkulator");
        navigateToCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigateToCalculatorActionPerformed(evt);
            }
        });

        navigateToLaporan.setText("Laporan");
        navigateToLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigateToLaporanActionPerformed(evt);
            }
        });

        openEditForm.setText("Edit");
        openEditForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openEditFormActionPerformed(evt);
            }
        });

        deleteProductButton.setText("Hapus");
        deleteProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtSearch)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRefresh))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(navigateToLaporan)
                                .addGap(18, 18, 18)
                                .addComponent(navigateToAddProduct))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(navigateToKasir)
                                .addGap(18, 18, 18)
                                .addComponent(openEditForm)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteProductButton)
                            .addComponent(navigateToCalculator)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(navigateToKasir)
                    .addComponent(openEditForm)
                    .addComponent(deleteProductButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(navigateToLaporan)
                    .addComponent(navigateToAddProduct)
                    .addComponent(navigateToCalculator))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        txtSearch.setText("");
        String searchQuery = null;
        loadDataToTable(searchQuery);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        String searchQuery = txtSearch.getText().trim();
        loadDataToTable(searchQuery);
    }//GEN-LAST:event_txtSearchActionPerformed

    private void navigateToKasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navigateToKasirActionPerformed
        // TODO add your handling code here:
        TransactionFrama kasir = new TransactionFrama();
        kasir.setVisible(true);
        kasir.pack();
        kasir.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_navigateToKasirActionPerformed

    private void navigateToAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navigateToAddProductActionPerformed
        // TODO add your handling code here:
        Product ap = new Product("");
        ap.setVisible(true);
        ap.pack();
        ap.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_navigateToAddProductActionPerformed

    private void navigateToCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navigateToCalculatorActionPerformed
        // TODO add your handling code here:
        CalcFrame calc = new CalcFrame();
        calc.setVisible(true);
        calc.pack();
        calc.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_navigateToCalculatorActionPerformed

    private void navigateToLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navigateToLaporanActionPerformed
        // TODO add your handling code here:
        Laporan laporan = new Laporan();
        laporan.setVisible(true);
        laporan.pack();
        laporan.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_navigateToLaporanActionPerformed

    private void deleteProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductButtonActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = this.jTable1.getSelectedRows();
        
        if (selectedRows.length < 1) {
            JOptionPane.showMessageDialog(null, "Harap pilih data yang ingin dihapus pada tabel!");
            return;
        }
        
        try {
            DBConnect db = new DBConnect();
            Connection conn = db.connect();
            
            if ((JOptionPane.showConfirmDialog(null, "Apakah ada yakin ingin menghapus?", "konfirmasi", JOptionPane.YES_NO_OPTION)) == 0) {
                this.pst = conn.prepareStatement("DELETE FROM products WHERE sku=?");
                
                for (int row : selectedRows) {
                    String sku = model.getValueAt(row, 1).toString();
                    this.pst.setString(1, sku);
                    this.pst.addBatch();
                }
                
                int[] rowsDeleted = this.pst.executeBatch();
                
                this.loadDataToTable(null);
                
                if (rowsDeleted.length > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteProductButtonActionPerformed

    private void openEditFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openEditFormActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = this.jTable1.getSelectedRows();
        
        if (selectedRows.length > 1) {
            JOptionPane.showMessageDialog(null, "Kamu hanya bisa edit 1 data!");
            return;
        }
        String sku = model.getValueAt(selectedRows[0], 1).toString();
        
        Product form = new Product(sku);
        
        form.setVisible(true);
        form.pack();
        form.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_openEditFormActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pointOfSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pointOfSale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton deleteProductButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton navigateToAddProduct;
    private javax.swing.JButton navigateToCalculator;
    private javax.swing.JButton navigateToKasir;
    private javax.swing.JButton navigateToLaporan;
    private javax.swing.JButton openEditForm;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
